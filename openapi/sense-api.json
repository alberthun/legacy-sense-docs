{
  "openapi": "3.0.0",
  "info": {
    "title": "Sense Api",
    "version": "2.0.0",
    "description": "The Sense API is a RESTful JSON API that allows developers to access the majority of the Sense platformâ€™s functionality\n"
  },
  "paths": {
    "/v2/login": {
      "post": {
        "summary": "Authenticate users",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "example": "jolly@poly.com",
                    "type": "string"
                  },
                  "password": {
                    "example": "secret password",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Authenticate"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "jwt token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/users/me": {
      "get": {
        "summary": "get authenticated user",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "update authenticated user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "object",
                    "properties": {
                      "timeZone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/organizations": {
      "get": {
        "summary": "List organization",
        "tags": ["Organizations"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Organizations"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/${organizationId}": {
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update an organization",
        "tags": ["Organizations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an organization",
        "tags": ["Organizations"],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/organizations/${organizationId}/leave": {
      "parameters": [
        {
          "in": "path",
          "name": "organizationId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Leave an organization",
        "tags": ["Organizations"],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        }
      }
    },
    "/v2/landmarks/search": {
      "post": {
        "summary": "Search and list landmarks",
        "tags": ["Landmarks"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Landmark"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/landmarks": {
      "post": {
        "summary": "Add a landmark",
        "tags": ["Landmarks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Landmark"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Landmark"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/landmarks/${landmarkId}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "landmarkId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get a landmark",
        "tags": ["Landmarks"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Landmark"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a landmark",
        "tags": ["Landmarks"],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "summary": "Update a landmark",
        "tags": ["Landmarks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Landmark"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Landmark"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/channels": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List channels",
        "tags": ["Channels"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Channel"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Channel",
        "tags": ["Channels"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["ios", "android", "gateway"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Channel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{projectId}/channels/{channelId}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "channelId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get a Channel",
        "tags": ["Channels"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Channel"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Channel",
        "tags": ["Channels"],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "summary": "Update a Channel",
        "tags": ["Channels"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "credentials": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Channel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/channels/${channelId}/apiKeys": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "channelId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List ApiKeys for a channel",
        "tags": ["Channels"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiKey"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create ApiKey for a channel",
        "tags": ["Channels"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/channels/${channelId}/apiKeys/{apiKeyId}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "channelId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "apiKeyId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "summary": "Delete a ApiKey",
        "tags": ["Channels"],
        "responses": {
          "204": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "summary": "Update ApiKey for a channel",
        "tags": ["Channels"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ApiKey"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/rules": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List rules",
        "tags": ["Rules"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Rule"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create rule",
        "tags": ["Rules"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Rule"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/devices/search": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List devices",
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Device"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/devices/{deviceId}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Read Device",
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Device"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Device",
        "tags": ["Devices"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Device"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/${projectId}/devices/{deviceId}/config": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Read Device Config",
        "tags": ["Devices"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeviceConfig"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Device Config",
        "tags": ["Devices"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeviceConfig"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LongLat": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number"
          },
          "latitude": {
            "type": "number"
          }
        }
      },
      "StringStringMap": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ActionEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "example": "email"
          },
          "successfullyExecutedAt": {
            "type": "string",
            "readOnly": true
          },
          "deviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "readOnly": true
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActionSMS": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "example": "sms"
          },
          "successfullyExecutedAt": {
            "type": "string",
            "readOnly": true
          },
          "deviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string"
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActionPush": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "example": "push"
          },
          "successfullyExecutedAt": {
            "type": "string",
            "readOnly": true
          },
          "deviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "readOnly": true
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ActionWebhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "example": "webhook"
          },
          "successfullyExecutedAt": {
            "type": "string",
            "readOnly": true
          },
          "deviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/components/schemas/StringStringMap"
          },
          "method": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "throttleInSeconds": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "readOnly": true
          },
          "logicalCondition": {
            "type": "object"
          },
          "actions": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ActionEmail"
                },
                {
                  "$ref": "#/components/schemas/ActionSMS"
                },
                {
                  "$ref": "#/components/schemas/ActionPush"
                },
                {
                  "$ref": "#/components/schemas/ActionWebhook"
                }
              ]
            }
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "qrCode": {
            "type": "string"
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["ios", "android", "gateway"]
          },
          "method": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "credentials": {
            "type": "string"
          },
          "apiKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKey"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "locale": {
            "type": "object",
            "properties": {
              "timezone": {
                "type": "string",
                "readOnly": true
              }
            }
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean",
                "readOnly": true
              }
            }
          }
        }
      },
      "Landmark": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "model": {
            "type": "object"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeviceProperties": {
        "type": "object",
        "properties": {
          "manufacturer": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "osVersion": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          }
        }
      },
      "DeviceState": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LongLat"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastUpdatedAt": {
            "type": "string"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "properties": {
            "$ref": "#/components/schemas/DeviceProperties"
          },
          "deviceState": {
            "$ref": "#/components/schemas/DeviceState"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/StringStringMap"
          },
          "sensors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeviceConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "deviceId": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "cadence": {
            "type": "integer"
          },
          "maxStorage": {
            "type": "integer"
          },
          "sensors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
